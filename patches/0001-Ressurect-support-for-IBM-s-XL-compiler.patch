From 02e5ffdbd98f3647bb867e9567fad799bd9249a4 Mon Sep 17 00:00:00 2001
From: Rob Boehne <robb@datalogics.com>
Date: Thu, 29 Oct 2020 10:56:53 -0500
Subject: [PATCH] Ressurect support for IBM's XL compiler

IBM's XL compiler can only support c++11 when the 'clang front end' is used.
This change modifies the configure step to use xlclang and  xlclang++
Change readme.html reference to xlC to refer to xlclang++ instead.
---
 icu4c/source/runConfigureICU | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/icu4c/source/runConfigureICU b/icu4c/source/runConfigureICU
index 77df3a0..65e89b9 100755
--- a/icu4c/source/runConfigureICU
+++ b/icu4c/source/runConfigureICU
@@ -36,7 +36,7 @@ the runConfigureICU command:
 
 The following names can be supplied as the argument for platform:
 
-    AIX                 Use the IBM Visual Age xlc_r/xlC_r compilers on AIX
+    AIX                 Use the IBM XL xlclang/xlclang compilers on AIX
     AIX/GCC             Use the GNU gcc/g++ compilers on AIX
     Cygwin              Use the GNU gcc/g++ compilers on Cygwin
     Cygwin/MSVC         Use the Microsoft Visual C++ compiler on Cygwin
@@ -49,7 +49,7 @@ The following names can be supplied as the argument for platform:
     Linux/gcc           Use the GNU gcc/g++ compilers on Linux
     Linux/ECC           Use the Intel ECC compiler on Linux
     Linux/ICC           Use the Intel ICC compiler on Linux
-    Linux/VA            Use the IBM Visual Age compiler on Power PC Linux
+    Linux/VA            Use the IBM XL compiler on Power PC Linux
     MacOSX              Use the default compilers on MacOS X (Darwin)
     MacOSX/GCC          Use the GNU gcc/g++ compilers on MacOSX (Darwin)
     MinGW               Use the GNU gcc/g++ compilers on MinGW
@@ -134,14 +134,14 @@ fi
 case $platform in
     AIX)
         THE_OS=AIX
-        THE_COMP="xlC_r"
-        CC=`which xlc_r`; export CC
+        THE_COMP="xlclang"
+        CC=`which xlclang`; export CC
         if [ ! -x $CC ]; then
-           echo "ERROR: xlc_r was not found, please check the PATH to make sure it is correct."; exit 1
+           echo "ERROR: xlclang was not found, please check the PATH to make sure it is correct."; exit 1
         fi
-        CXX=`which xlC_r`; export CXX
+        CXX=`which xlclang++`; export CXX
         if [ ! -x $CXX ]; then
-           echo "ERROR: xlC_r was not found, please check the PATH to make sure it is correct."; exit 1
+           echo "ERROR: xlclang++ was not found, please check the PATH to make sure it is correct."; exit 1
         fi
         RELEASE_CFLAGS="-O2 -qmaxmem=-1"
         RELEASE_CXXFLAGS="-O2 -qmaxmem=-1"
@@ -228,9 +228,9 @@ case $platform in
         ;;
     Linux/VA)
         THE_OS="Linux"
-        THE_COMP="IBM Visual Age C++ Compiler"
-        CC=`which xlc_r`; export CC
-        CXX=`which xlC_r`; export CXX
+        THE_COMP="IBM XL C++ Compiler"
+        CC=`which xlclang`; export CC
+        CXX=`which xlclang++`; export CXX
         RELEASE_CFLAGS="-O2 -qmaxmem=-1"
         RELEASE_CXXFLAGS="-O2 -qmaxmem=-1"
         ;;
-- 
1.8.3.1

